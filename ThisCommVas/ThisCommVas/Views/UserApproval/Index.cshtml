@{
    ViewBag.Title = "Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var allUsers = ViewBag.AllUsers as List<ThisCommVas.users>;
}

<h2>All User Accounts</h2>

@if (allUsers != null && allUsers.Count() > 0)
{
    <div class="container">
        <table class="table table-striped" id="userTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in allUsers)
                {
                    <tr>
                        <td>@user.username</td>
                        <td>@user.email</td>
                        <td>@user.Roles.RoleName</td>
                        <td class="status" style="text-align: center;">
                            @if (user.Status == 1)
                            {
                                <div style="background-color: green; width: 20px; height: 20px; border-radius: 50%;"></div>
                            }
                            else if (user.Status == 2)
                            {
                                <div style="background-color: red; width: 20px; height: 20px; border-radius: 50%;"></div>
                            }
                            else
                            {
                                <div style="background-color: gray; width: 20px; height: 20px; border-radius: 50%;"></div>
                            }
                        </td>

                        <td>
                           
                                <button class="btn btn-success btn-approve" data-userid="@user.id" data-action="approve">Approve</button>
                                <button class="btn btn-danger btn-reject" data-userid="@user.id" data-action="reject">Reject</button>
                          
                                <button class="btn btn-primary btn-edit" data-userid="@user.id" data-action="edit">Edit</button>
                                <button class="btn btn-warning btn-delete" data-userid="@user.id" data-action="delete">Delete</button>
                           
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No users found.</p>
}
<script>
    $(document).ready(function () {
        // Handle edit button click
        $(document).on('click', '.btn-edit', function () {
            var row = $(this).closest('tr');
            var userId = $(this).data('userid');

            // Check if the button is already in "Save" state
            if (!$(this).hasClass('btn-save')) {
                // Change button text to 'Save'
                $(this).text('Save').removeClass('btn-primary btn-edit').addClass('btn-success btn-save');

                // Disable other action buttons
                row.find('.btn-approve, .btn-reject, .btn-delete').prop('disabled', true);

                // Enable editing in the row
                row.find('td:nth-child(3)').each(function () {
                    var roleId = $(this).text().trim() === "Admin" ? 1 : 2;
                    var select = $('<select>').append(
                        $('<option>').val(1).text('Admin'),
                        $('<option>').val(2).text('Artist')
                    ).val(roleId);
                    $(this).html(select);
                });

                // Store the userId as a data attribute of the save button
                $(this).data('userid', userId);
            }
        });

        // Handle save button click
        $(document).on('click', '.btn-save', function () {
            var row = $(this).closest('tr');
            var userId = $(this).data('userid'); // Retrieve userId from the save button's data attribute
            var roleId = row.find('td:nth-child(3) select').val();

            // Perform AJAX request to update user role
            $.ajax({
                type: 'POST',
                url: '/UserApproval/EditUserRole',
                data: { userId: userId, roleId: roleId },
                success: function (response) {
                    if (response.success) {
                        // Update UI with saved data
                        var roleName = roleId == 1 ? 'Admin' : 'Artist';
                        row.find('td:nth-child(3)').text(roleName);

                        // Disable other action buttons
                        row.find('.btn-approve, .btn-reject, .btn-delete').prop('disabled', false);

                        // Change button text back to 'Edit'
                        row.find('.btn-save').text('Edit').removeClass('btn-success btn-save').addClass('btn-primary btn-edit');
                    } else {
                        // Handle error
                        Swal.fire('Error', response.error, 'error');
                    }
                },
                error: function () {
                    // Handle error
                    Swal.fire('Error', 'Unable to save data.', 'error');
                }
            });
        });

        // Handle delete button click
        $(document).on('click', '.btn-delete', function () {
            var userId = $(this).data('userid');

            // Confirm deletion
            Swal.fire({
                title: 'Are you sure?',
                text: 'You won\'t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Perform AJAX request to delete user
                    $.ajax({
                        type: 'POST',
                        url: '/UserApproval/DeleteUser',
                        data: { userId: userId }, // Pass userId to the back-end
                        success: function (response) {
                            if (response.success) {
                                // Remove row from table
                                $('#userTable').find('tr[data-userid="' + userId + '"]').remove();
                                // Show success message
                                Swal.fire(
                                    'Deleted!',
                                    'User has been deleted.',
                                    'success'
                                );
                            } else {
                                // Show error message
                                Swal.fire('Error', response.error, 'error');
                            }
                        },
                        error: function () {
                            // Handle error
                            Swal.fire('Error', 'Unable to delete user.', 'error');
                        }
                    });
                }
            });
        });
    });
</script>



<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/Functions/Approval.js"></script>
